import Mailjet from 'node-mailjet';

const mailjet = Mailjet.apiConnect(
  process.env.MAILJET_API_KEY || '',
  process.env.MAILJET_SECRET_KEY || ''
);

const EMAIL_FROM = process.env.EMAIL_FROM || 'noreply@yourdomain.com';
const EMAIL_FROM_NAME = process.env.EMAIL_FROM_NAME || 'Zyra Team';
const FRONTEND_URL = process.env.FRONTEND_URL || 'http://localhost:3002';

interface EmailTemplateData {
  [key: string]: string;
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ Mailjet
 */
export const sendEmail = async (
  to: string,
  subject: string,
  htmlContent: string,
  data: EmailTemplateData = {}
) => {
  // –ó–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —à–∞–±–ª–æ–Ω–µ
  let processedHtml = htmlContent;
  for (const key in data) {
    processedHtml = processedHtml.replace(new RegExp(`{{${key}}}`, 'g'), data[key]);
  }

  try {
    const request = await mailjet.post('send', { version: 'v3.1' }).request({
      Messages: [
        {
          From: {
            Email: EMAIL_FROM,
            Name: EMAIL_FROM_NAME,
          },
          To: [
            {
              Email: to,
            },
          ],
          Subject: subject,
          HTMLPart: processedHtml,
        },
      ],
    });

    console.log('‚úÖ Email sent successfully:', request.body);
    return request.body;
  } catch (error: any) {
    console.error('‚ùå Failed to send email:', error.statusCode, error.message);
    throw new Error(`Email sending failed: ${error.message}`);
  }
};

/**
 * –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
 */
export const sendWelcomeEmail = async (email: string, userName: string, token: string) => {
  const confirmLink = `${FRONTEND_URL}/auth/confirm?token=${token}`;
  const subject = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zyra!';
  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #4F46E5; color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9fafb; padding: 30px; border-radius: 0 0 8px 8px; }
        .button { display: inline-block; background: #4F46E5; color: white; padding: 12px 30px; text-decoration: none; border-radius: 6px; margin: 20px 0; }
        .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zyra!</h1>
        </div>
        <div class="content">
          <h2>–ü—Ä–∏–≤–µ—Ç, {{userName}}!</h2>
          <p>–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤.</p>
          <p>–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email:</p>
          <center>
            <a href="{{confirmLink}}" class="button">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å Email</a>
          </center>
          <p>–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
          <p style="word-break: break-all; color: #4F46E5;">{{confirmLink}}</p>
          <p>–ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ Zyra, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
        </div>
        <div class="footer">
          <p>¬© 2025 Zyra. –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤.</p>
        </div>
      </div>
    </body>
    </html>
  `;

  await sendEmail(email, subject, htmlContent, { userName, confirmLink });
};

/**
 * –ü–∏—Å—å–º–æ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
 */
export const sendPasswordResetEmail = async (email: string, userName: string, token: string) => {
  const resetLink = `${FRONTEND_URL}/set-password?token=${token}`;
  const subject = '–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è Zyra';
  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #EF4444; color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9fafb; padding: 30px; border-radius: 0 0 8px 8px; }
        .button { display: inline-block; background: #EF4444; color: white; padding: 12px 30px; text-decoration: none; border-radius: 6px; margin: 20px 0; }
        .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
        .warning { background: #FEF2F2; border-left: 4px solid #EF4444; padding: 15px; margin: 20px 0; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è</h1>
        </div>
        <div class="content">
          <h2>–ü—Ä–∏–≤–µ—Ç, {{userName}}!</h2>
          <p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ Zyra.</p>
          <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</p>
          <center>
            <a href="{{resetLink}}" class="button">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</a>
          </center>
          <p>–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
          <p style="word-break: break-all; color: #EF4444;">{{resetLink}}</p>
          <div class="warning">
            <strong>‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong> –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ. –í–∞—à –ø–∞—Ä–æ–ª—å –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
          </div>
          <p style="color: #666; font-size: 14px;">–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.</p>
        </div>
        <div class="footer">
          <p>¬© 2025 Zyra. –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤.</p>
        </div>
      </div>
    </body>
    </html>
  `;

  await sendEmail(email, subject, htmlContent, { userName, resetLink });
};

/**
 * –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email
 */
export const sendEmailConfirmedEmail = async (email: string, userName: string) => {
  const dashboardLink = `${FRONTEND_URL}/dashboard`;
  const subject = '–í–∞—à email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≤ Zyra!';
  const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #22C55E; color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9fafb; padding: 30px; border-radius: 0 0 8px 8px; }
        .button { display: inline-block; background: #22C55E; color: white; padding: 12px 30px; text-decoration: none; border-radius: 6px; margin: 20px 0; }
        .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
        .success { background: #F0FDF4; border-left: 4px solid #22C55E; padding: 15px; margin: 20px 0; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>üéâ Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!</h1>
        </div>
        <div class="content">
          <h2>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, {{userName}}!</h2>
          <div class="success">
            <strong>‚úÖ –£—Å–ø–µ—à–Ω–æ!</strong> –í–∞—à email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∏ –∞–∫–∫–∞—É–Ω—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.
          </div>
          <p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ Zyra:</p>
          <ul>
            <li>üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è</li>
            <li>üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</li>
            <li>üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
            <li>üì± –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</li>
          </ul>
          <center>
            <a href="{{dashboardLink}}" class="button">–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –¥–∞—à–±–æ—Ä–¥</a>
          </center>
        </div>
        <div class="footer">
          <p>¬© 2025 Zyra. –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤.</p>
        </div>
      </div>
    </body>
    </html>
  `;

  await sendEmail(email, subject, htmlContent, { userName, dashboardLink });
};

/**
 * –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫)
 */
export const sendTestEmail = async (to: string, subject: string, htmlContent: string) => {
  await sendEmail(to, subject, htmlContent);
};


