import bcrypt from 'bcrypt';
import { pool, closePool } from './config/database';
import { env } from './config/env';

async function seedDatabase() {
  try {
    console.log('üå± Seeding database...\n');

    // 1. –°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞
    console.log('  Creating admin user...');
    const passwordHash = await bcrypt.hash(env.ADMIN_PASSWORD, 10);
    
    await pool.query(
      `INSERT INTO users (email, password_hash, nickname, role)
       VALUES ($1, $2, $3, $4)
       ON CONFLICT (email) DO NOTHING`,
      [env.ADMIN_EMAIL, passwordHash, 'Admin', 'admin']
    );
    console.log('  ‚úÖ Admin user created\n');

    // 2. –°–æ–∑–¥–∞—Ç—å —Ñ–∞–∫—Ç–æ—Ä—ã
    console.log('  Creating factors...');
    const factors = [
      { key: 'lack_sleep', name: '–ù–µ–¥–æ—Å—ã–ø', weight: -0.30, tau: 24 },
      { key: 'alcohol', name: '–ê–ª–∫–æ–≥–æ–ª—å (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 24-48h)', weight: -0.20, tau: 12 },
      { key: 'caffeine_late', name: '–ö–æ—Ñ–µ–∏–Ω –ø–æ–∑–¥–Ω–∏–π', weight: -0.08, tau: 8 },
      { key: 'travel_jetlag', name: '–î–∂–µ—Ç–ª–∞–≥ / –ø–µ—Ä–µ–ª—ë—Ç', weight: -0.25, tau: 36 },
      { key: 'illness', name: '–ë–æ–ª–µ–∑–Ω—å / —Å–∏–º–ø—Ç–æ–º—ã', weight: -0.40, tau: 72 },
      { key: 'high_work_stress', name: '–†–∞–±–æ—á–∏–π/–ª–∏—á–Ω—ã–π —Å—Ç—Ä–µ—Å—Å', weight: -0.18, tau: 24 },
      { key: 'heavy_training', name: '–ù–µ–¥–∞–≤–Ω—è—è –æ—á–µ–Ω—å —Ç—è–∂—ë–ª–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', weight: -0.25, tau: 36 },
      { key: 'light_activity', name: '–õ—ë–≥–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ / recovery', weight: 0.12, tau: 8 },
      { key: 'meditation', name: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è / –¥—ã—Ö–∞–Ω–∏–µ', weight: 0.10, tau: 6 },
      { key: 'outdoor_time', name: '–í—Ä–µ–º—è –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ', weight: 0.12, tau: 12 },
      { key: 'poor_nutrition', name: '–ü–ª–æ—Ö–æ–µ –ø–∏—Ç–∞–Ω–∏–µ', weight: -0.12, tau: 24 },
      { key: 'hydration_low', name: '–û–±–µ–∑–≤–æ–∂–∏–≤–∞–Ω–∏–µ', weight: -0.10, tau: 12 },
      { key: 'menstrual_phase', name: '–ú–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä', weight: -0.18, tau: 48 },
      { key: 'sleep_environment', name: '–ü–ª–æ—Ö–∏–µ —É—Å–ª–æ–≤–∏—è —Å–Ω–∞ (—à—É–º, —Å–≤–µ—Ç)', weight: -0.15, tau: 12 },
    ];

    for (const factor of factors) {
      await pool.query(
        `INSERT INTO factors (key, name, weight, tau, is_active)
         VALUES ($1, $2, $3, $4, $5)
         ON CONFLICT (key) DO NOTHING`,
        [factor.key, factor.name, factor.weight, factor.tau, true]
      );
    }
    console.log(`  ‚úÖ ${factors.length} factors created\n`);

    console.log('‚úÖ Database seeding completed successfully');
  } catch (error) {
    console.error('‚ùå Seeding failed:', error);
    throw error;
  } finally {
    await closePool();
  }
}

seedDatabase();

