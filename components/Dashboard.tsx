import React from 'react';
import { CheckInRecord, Factor } from '../types';
import { useLocalStorage } from '../src/hooks/useLocalStorage';
import { useAuth } from '../src/contexts/AuthContext';
import { Button } from './ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import { Badge } from './ui/badge';
import { AthleteMonitoringService } from '../utils/athleteMonitoring';

interface DashboardProps {
  checkInHistory: CheckInRecord[];
  factors: Factor[];
  onStartCheckIn: () => void;
  onNavigateToAuth?: () => void;
}

// –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫
// –í–ê–ñ–ù–û: –®–∫–∞–ª—ã —Ç–µ–ø–µ—Ä—å –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –ò–Ω–¥–µ–∫—Å –•—É–ø–µ—Ä–∞ (1=—Ö–æ—Ä–æ—à–æ, 7=–ø–ª–æ—Ö–æ)
const getMetricInterpretation = (value: number | null, fieldName: string) => {
    if (value === null) return { label: '', color: '' };

    // –î–ª—è –ò–Ω–¥–µ–∫—Å–∞ –•—É–ø–µ—Ä–∞: 1 = —Ö–æ—Ä–æ—à–æ, 7 = –ø–ª–æ—Ö–æ
    if (['sleepQuality', 'fatigue', 'muscleSoreness', 'stress', 'mood'].includes(fieldName)) {
      if (value <= 2) return { label: '–û—Ç–ª–∏—á–Ω–æ', color: 'text-green-600' };
      if (value <= 4) return { label: '–•–æ—Ä–æ—à–æ', color: 'text-green-500' };
      if (value <= 5) return { label: '–°—Ä–µ–¥–Ω–µ', color: 'text-yellow-600' };
      return { label: '–ü–ª–æ—Ö–æ', color: 'text-red-600' };
    }
    
    // –î–ª—è –¥–æ–ø –º–µ—Ç—Ä–∏–∫ (motivation, focus): 1 = —Ö–æ—Ä–æ—à–æ, 7 = –ø–ª–æ—Ö–æ
    if (value <= 2) return { label: '–û—Ç–ª–∏—á–Ω–æ', color: 'text-green-600' };
    if (value <= 4) return { label: '–•–æ—Ä–æ—à–æ', color: 'text-green-500' };
    if (value <= 5) return { label: '–°—Ä–µ–¥–Ω–µ', color: 'text-yellow-600' };
    return { label: '–ü–ª–æ—Ö–æ', color: 'text-red-600' };
};

const MetricCard: React.FC<{ title: string; value: number | null; fieldName: string }> = ({ title, value, fieldName }) => {
    const interpretation = getMetricInterpretation(value, fieldName);

    return (
        <Card className="flex flex-col">
            <CardHeader className="pb-2">
                <CardTitle className="text-sm font-semibold text-slate-600">{title}</CardTitle>
            </CardHeader>
            <CardContent className="flex-grow flex flex-col justify-end">
                <div className="flex flex-col">
                    <p className="text-3xl font-bold text-slate-800">
                        {value !== null ? value : '‚Äì'}
                    </p>
                    {value !== null && (
                        <p className={`text-sm font-semibold mt-1 ${interpretation.color}`}>
                            {interpretation.label}
                        </p>
                    )}
                </div>
            </CardContent>
        </Card>
    );
};

const Dashboard: React.FC<DashboardProps> = ({ checkInHistory, factors, onStartCheckIn, onNavigateToAuth }) => {
  const [nickname] = useLocalStorage('userNickname', '—á–µ–º–ø–∏–æ–Ω');
  const { isAuthenticated, user, tempSessionId } = useAuth();
  const latestCheckIn = checkInHistory?.[0];
  
  // –ò–Ω–¥–µ–∫—Å –•—É–ø–µ—Ä–∞
  const hooperIndex = latestCheckIn?.hooperIndex ?? null;
  const hooperInterp = hooperIndex !== null 
    ? AthleteMonitoringService.interpretHooperIndex(hooperIndex)
    : null;

  // TSB (Training Stress Balance)
  const tsb = latestCheckIn?.tsb ?? null;
  const tsbInterp = tsb !== null 
    ? AthleteMonitoringService.interpretTSB(tsb)
    : null;

  // CTL –∏ ATL –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const ctl = latestCheckIn?.ctl ?? null;
  const atl = latestCheckIn?.atl ?? null;

  // Training Load –∑–∞ —Å–µ–≥–æ–¥–Ω—è
  const dailyLoad = latestCheckIn?.dailyLoad ?? null;

  // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  const contextualRecommendation = hooperIndex !== null && tsb !== null
    ? AthleteMonitoringService.generateRecommendation(hooperIndex, tsb)
    : null;

  return (
    <div className="space-y-8">
       <header className="flex justify-between items-start">
            <div>
                <h2 className="text-2xl font-bold text-slate-800">
                  {isAuthenticated 
                    ? `–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${user?.email || nickname}`
                    : '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zyra'
                  }
                </h2>
                <p className="text-slate-500">
                  {isAuthenticated ? (
                    latestCheckIn 
                      ? '–í–æ—Ç –≤–∞—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—É—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–π.'
                      : '–ù–∞—á–Ω–∏—Ç–µ —Å –ø–µ—Ä–≤–æ–≥–æ —á–µ–∫–∏–Ω–∞, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø–∞–Ω–µ–ª—å.'
                  ) : (
                    '–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.'
                  )}
                </p>
                
                {/* CTA –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
                {!isAuthenticated && (
                  <div className="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                    <p className="text-sm text-blue-800 mb-3">
                      üí° <strong>–ó–∞—á–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è?</strong><br />
                      ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —á–µ–∫–∏–Ω–æ–≤<br />
                      ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏<br />
                      ‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏
                    </p>
                    {onNavigateToAuth && (
                      <Button 
                        onClick={onNavigateToAuth}
                        className="bg-blue-600 hover:bg-blue-700 text-white"
                        size="sm"
                      >
                        –í–æ–π—Ç–∏ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                      </Button>
                    )}
                  </div>
                )}
            </div>
             <Button
                onClick={onStartCheckIn}
                size="lg"
            >
                {latestCheckIn ? '–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —á–µ–∫–∏–Ω' : '–ù–∞—á–∞—Ç—å –ø–µ—Ä–≤—ã–π —á–µ–∫–∏–Ω' }
            </Button>
        </header>

      {/* –ò–Ω–¥–µ–∫—Å –•—É–ø–µ—Ä–∞ –∏ TSB */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* –ò–Ω–¥–µ–∫—Å –•—É–ø–µ—Ä–∞ */}
        <Card>
          <CardHeader>
            <CardTitle>–ò–Ω–¥–µ–∫—Å –•—É–ø–µ—Ä–∞</CardTitle>
            <CardDescription>–ù–∞—É—á–Ω–æ-–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –≤–∞—à–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (5-35)</CardDescription>
          </CardHeader>
          <CardContent>
            {latestCheckIn && hooperInterp ? (
              <div className="flex items-start gap-6">
                <div className="flex-1 text-center">
                  <p className={`text-5xl font-bold ${
                    hooperInterp.level === 'excellent' || hooperInterp.level === 'good' ? 'text-green-600' :
                    hooperInterp.level === 'moderate' ? 'text-yellow-600' :
                    hooperInterp.level === 'high' ? 'text-orange-600' :
                    'text-red-600'
                  }`}>
                    {hooperIndex}
                  </p>
                  <p className="font-semibold text-slate-600 mt-1">{hooperInterp.description}</p>
                  <p className="text-xs text-slate-400 mt-2">–ß–µ–º –Ω–∏–∂–µ, —Ç–µ–º –ª—É—á—à–µ</p>
                </div>
                <div className="w-px bg-slate-200 self-stretch"></div>
                <div className="flex-1 flex flex-col justify-center space-y-2">
                  <div className="text-xs text-slate-500">
                    <div className="flex justify-between mb-1">
                      <span>–°–æ–Ω:</span>
                      <span className="font-semibold">{latestCheckIn.data.sleepQuality}</span>
                    </div>
                    <div className="flex justify-between mb-1">
                      <span>–£—Å—Ç–∞–ª–æ—Å—Ç—å:</span>
                      <span className="font-semibold">{latestCheckIn.data.fatigue}</span>
                    </div>
                    <div className="flex justify-between mb-1">
                      <span>–ë–æ–ª—å:</span>
                      <span className="font-semibold">{latestCheckIn.data.muscleSoreness}</span>
                    </div>
                    <div className="flex justify-between mb-1">
                      <span>–°—Ç—Ä–µ—Å—Å:</span>
                      <span className="font-semibold">{latestCheckIn.data.stress}</span>
                    </div>
                    <div className="flex justify-between">
                      <span>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</span>
                      <span className="font-semibold">{latestCheckIn.data.mood}</span>
                    </div>
                  </div>
                </div>
              </div>
            ) : (
              <p className="text-slate-500 text-center py-8">–ó–∞–≤–µ—Ä—à–∏—Ç–µ —á–µ–∫–∏–Ω, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ü–µ–Ω–∫—É.</p>
            )}
          </CardContent>
        </Card>

        {/* Training Stress Balance (TSB) */}
        <Card>
          <CardHeader>
            <CardTitle>–ë–∞–ª–∞–Ω—Å –Ω–∞–≥—Ä—É–∑–∫–∏ (TSB)</CardTitle>
            <CardDescription>–í–∞—à–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–æ–¥–µ–ª–∏ –ë–∞–Ω–∏—Å—Ç–µ—Ä–∞</CardDescription>
          </CardHeader>
          <CardContent>
            {latestCheckIn ? (
              (ctl === 0 || ctl === null) && (atl === 0 || atl === null) ? (
                <div className="text-center py-8">
                  <p className="text-slate-500 mb-2">–î–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ</p>
                  <p className="text-xs text-slate-400">
                    TSB —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫ (–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å √ó RPE).
                    <br />
                    –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —á–µ–∫–∏–Ω —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ.
                  </p>
                </div>
              ) : tsbInterp && ctl !== null && atl !== null && tsb !== null ? (
                <div className="flex items-start gap-6">
                  <div className="flex-1 text-center">
                    <p className={`text-5xl font-bold ${
                      tsbInterp.level === 'optimal' ? 'text-green-600' :
                      tsbInterp.level === 'productive' ? 'text-yellow-600' :
                      tsbInterp.level === 'fresh' ? 'text-blue-600' :
                      tsbInterp.level === 'high' ? 'text-orange-600' :
                      'text-red-600'
                    }`}>
                      {tsb.toFixed(1)}
                    </p>
                    <p className="font-semibold text-slate-600 mt-1">{tsbInterp.description}</p>
                    <p className="text-xs text-slate-400 mt-2">–§–æ—Ä–º–∞ / –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å</p>
                  </div>
                  <div className="w-px bg-slate-200 self-stretch"></div>
                  <div className="flex-1 flex flex-col justify-center space-y-2 text-sm">
                    <div className="flex justify-between items-center">
                      <span className="text-slate-600">–§–∏—Ç–Ω–µ—Å (CTL):</span>
                      <span className="font-bold text-slate-800">{ctl.toFixed(1)}</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-slate-600">–£—Å—Ç–∞–ª–æ—Å—Ç—å (ATL):</span>
                      <span className="font-bold text-slate-800">{atl.toFixed(1)}</span>
                    </div>
                    {dailyLoad !== null && dailyLoad > 0 && (
                      <div className="flex justify-between items-center pt-2 border-t">
                        <span className="text-slate-600">–°–µ–≥–æ–¥–Ω—è (TL):</span>
                        <span className="font-bold text-slate-800">{dailyLoad.toFixed(0)}</span>
                      </div>
                    )}
                  </div>
                </div>
              ) : null
            ) : (
              <p className="text-slate-500 text-center py-8">TSB –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –≤–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —á–µ–∫–∏–Ω–∞.</p>
            )}
          </CardContent>
        </Card>
      </div>

      {/* –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      {contextualRecommendation && (
        <Card className="bg-slate-50 border-slate-300">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <span className="text-lg">üí°</span>
              –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-slate-700 leading-relaxed">{contextualRecommendation}</p>
          </CardContent>
        </Card>
      )}
      

      {/* Training Load –∑–∞ —Å–µ–≥–æ–¥–Ω—è */}
      {latestCheckIn && latestCheckIn.data.hadTraining && dailyLoad !== null && dailyLoad > 0 && (
        <Card>
          <CardHeader>
            <CardTitle>–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å–µ–≥–æ–¥–Ω—è</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-slate-600">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <span className="font-semibold">{latestCheckIn.data.trainingDuration} –º–∏–Ω—É—Ç</span></p>
                <p className="text-sm text-slate-600">RPE: <span className="font-semibold">{latestCheckIn.data.rpe} / 10</span></p>
              </div>
              <div className="text-center">
                <p className="text-xs text-slate-500 mb-1">Training Load</p>
                <p className="text-4xl font-bold text-slate-800">{dailyLoad.toFixed(0)}</p>
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –æ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ */}
      <Card className="bg-blue-50 border-blue-200">
        <CardHeader>
          <CardTitle className="text-blue-900">–û –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è—Ö</CardTitle>
        </CardHeader>
        <CardContent className="text-sm text-blue-800 space-y-2">
          <p>
            <strong>–ò–Ω–¥–µ–∫—Å –•—É–ø–µ—Ä–∞:</strong> –í–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑ 5 –º–µ—Ç—Ä–∏–∫ (—Å–æ–Ω, —É—Å—Ç–∞–ª–æ—Å—Ç—å, –±–æ–ª—å, —Å—Ç—Ä–µ—Å—Å, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ). 
            –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è —Ä–∞–Ω–Ω–µ–≥–æ –≤—ã—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏.
          </p>
          <p>
            <strong>sRPE (session RPE):</strong> –ú–µ—Ç–æ–¥ –æ—Ü–µ–Ω–∫–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –∫–∞–∫ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ (—à–∫–∞–ª–∞ –ë–æ—Ä–≥–∞ 0-10).
          </p>
          <p>
            <strong>–ú–æ–¥–µ–ª—å –ë–∞–Ω–∏—Å—Ç–µ—Ä–∞:</strong> –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–æ–¥–µ–ª—å "–§–∏—Ç–Ω–µ—Å-–£—Å—Ç–∞–ª–æ—Å—Ç—å", –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—â–∞—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é (CTL) –∏ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—É—é —É—Å—Ç–∞–ª–æ—Å—Ç—å (ATL). 
            TSB = CTL - ATL –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º.
          </p>
        </CardContent>
      </Card>
    </div>
  );
};

export default Dashboard;
